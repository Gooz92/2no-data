const solveUtils = require('./solve.utils.js');

module.exports = {
  calculateBounds: [
    {
      args: [ [ 10 ], 10 ],
      result: [
        [ 0, 9 ]
      ]
    },
    /*
     *
     * 
     * 2 2 | # # . # # . |
     *     | . # # . # # |
     *       0 0 0 1 1 1
     *
     */
    {
      args: [ [ 2, 2 ], 6 ],
      result: [
        [ 0, 2 ],
        [ 3, 5 ]
      ]
    },
    {
      args: [ [ 2, 2 ], 7 ],
      result: [
        [ 0, 3 ],
        [ 3, 6 ]
      ]
    },
    {
      args: [ [ 1, 1 ], 7 ],
      result: [
        [ 0, 4 ],
        [ 2, 6 ]
      ]
    },

    /*
     *         0 1 2 3 4 5 6 7 8 9
     * 1 1 1 | # . # . # . . . . . |
     *       | . . . . . # . # . # |
     */

     {
        args: [ [ 1, 1, 1 ], 10 ],
        result: [
          [ 0, 5 ],
          [ 2, 7 ],
          [ 4, 9 ]
        ]
     }
  ],

  simpleBlock: [
    {
      args: [ 2, [ 0, 2 ] ],
      result: [ 1, 1 ]
    }
  ],

  buildOppositeSideBlocks: [
    {
      args: [
        [
          [ [ 1, 1 ] ],
          [ [ 0, 1 ] ],
          [ [ 1, 1 ] ],
          [ [ 1, 1 ] ],
          [ [ 0, 2 ] ]
        ],

        3
      ],

      result: [
        [ [ 1, 1 ], [ 4, 4 ] ],
        [ [ 0, 4 ] ],
        [ [ 4, 4 ] ]        
      ]
    }
  ],

  buildCluesDistribution: [

    /**
     *       0 1 2 3 4 5 6 7
     * 1 3 | # . # # # . . . |
     *     | . . . # . # # # |
     *
     */
    {
      args: [ [ 1, 3 ], [ [ 0, 3 ], [ 2, 7 ] ] ],
      result: [
        [ [ 1, 0 ] ],
        [ [ 1, 0 ] ],
        [ [ 1, 0 ], [ 3, 1 ] ],
        [ [ 1, 0 ], [ 3, 1 ] ],
        [ [ 3, 1 ] ],
        [ [ 3, 1 ] ],
        [ [ 3, 1 ] ],
        [ [ 3, 1 ] ]
      ]
    }
  ],

  getAbsoluteIndexes: [
    {
      args: [ 1, 0, [ 1, 2 ] ],
      result: [ [ 1, 1 ], [ 1, 2 ] ]
    },
    {
      args: [ 2, 1, [ 2, 4 ] ],
      result: [ [ 2, 2 ], [ 4, 2 ] ]
    }
  ],

  getBlocks: [
    {
      args: [ [ 0, 0, 0 ] ],
      result: [
        [ [ 0, 2 ] ],
        [],
        []
      ]
    },
    {
      args: [ [ 1, 1, 1, 1 ] ],
      result: [
        [],
        [ [ 0, 3 ] ],
        []
      ]
    },
    {
      args: [ [ 2, 2, 2, 2, 2 ] ],
      result: [
        [],
        [],
        [ [ 0, 4 ] ]
      ]
    },
    {
      args: [ [ 0, 0, 1, 1, 1, 2, 2, 2, 2] ],
      result: [
        [ [ 0, 1 ] ],
        [ [ 2, 4 ]] ,
        [ [ 5, 8 ] ]
      ]
    },
    {
      args: [ [ 2, 2, 0, 0, 2, 2, 1, 1, 0, 0, 0 ] ],
      result: [
        [ [ 2, 3 ], [ 8, 10 ] ],
        [ [ 6, 7 ]] ,
        [ [ 0, 1 ], [ 4, 5 ] ]
      ]
    }
  ],

  generateLineClues: [
    {
      args: [ 1 ],
      result: [ [ 1 ] ]
    },
    {
      args: [ 2 ],
      result: [ [ 2 ] ]
    },
    {
      args: [ 3 ],
      result: [ [ 3 ], [ 1, 1 ] ]
    },
    {
      args: [ 4 ],
      result: [ [ 4 ], [ 1, 2 ], [ 2, 1 ]]
    },
    {
      args: [ 5 ],
      result: [ [ 5 ], [ 1, 3 ], [ 2, 2 ], [ 3, 1 ], [ 1, 1, 1 ] ]
    },
    {
      args: [ 6 ],
      result: [ [ 6 ], [ 1, 4 ], [ 2, 3 ], [ 3, 2 ], [ 4, 1 ], [ 1, 1, 2  ], [ 1, 2, 1 ], [ 2, 1, 1 ] ]
    },
    {
      args: [ 7 ],
      result: [
        [ 7 ],
        [ 1, 5 ], [ 2, 4 ], [ 3, 3 ], [ 4, 2 ], [ 5, 1 ],
        [ 1, 1, 3 ], [ 1, 2, 2 ], [ 1, 3, 1 ],
        [ 2, 1, 2 ], [ 2, 2, 1 ],
        [ 3, 1, 1 ],

        [ 1, 1, 1, 1 ]
      ]
    }
  ],

  preBuildBounds: [
    {
      args: [
        [
          [ [ 1, 0 ] ],
          [ [ 1, 0 ] ],
          [ [ 1, 0 ] ],
          [ [ 1, 0 ] ]
        ]
      ],
      result: [
        [ [ 0, 3 ] ]
      ]
    },
    {
      args: [
        [
          [ [ 1, 0 ] ],
          [ [ 1, 0 ] ],
          [ [ 2, 1 ] ],
          [ [ 2, 1 ] ],
          [ [ 2, 1 ] ]
        ]
      ],
      result: [
        [ [ 0, 1 ] ],
        [ [ 2, 4 ] ]
      ]
    },
    {
      args: [
        [
          [ [ 2, 0 ] ],
          [ [ 2, 0 ] ],
          [ [ 2, 0 ] ],
          [ [ 2, 0 ], [ 3, 1 ] ],
          [ [ 3, 1 ] ],
          [ [ 3, 1 ] ],
          [ [ 3, 1 ] ],
          [ [ 3, 1 ] ]
        ]
      ],
      result: [
        [ [ 0, 3 ] ],
        [ [ 3, 7 ] ]
      ]
    },
    {
      args: [
        [
          [ [ 2, 0 ] ],
          [ [ 2, 0 ] ],
          [ [ 2, 0 ] ],
          [ [ 2, 0 ], [ 1, 1 ] ],
          [ [ 1, 1 ] ],
          [ [ 1, 1 ], [ 3, 2 ] ],
          [ [ 3, 2 ] ],
          [ [ 3, 2 ] ],
          [ [ 3, 2 ] ],
          [ [ 3, 2 ] ]
        ]
      ],
      result: [
        [ [ 0, 3 ] ],
        [ [ 3, 5 ] ],
        [ [ 5, 9 ] ]
      ]
    },
  ],

  buildBounds: [
    {
      args: [
        [
          [ [ 2, 0 ] ],
          [ [ 2, 0 ] ],
          [ ],
          [ [ 2, 0 ], [ 1, 1 ] ],
          [ [ 1, 1 ] ],
          [ [ 1, 1 ], [ 3, 2 ] ],
          [ [ 3, 2 ] ],
          [ [ 3, 2 ] ],
          [ ],
          [ [ 3, 2 ] ]
        ],

        [ 2, 1, 3 ]
      ],

      result: [
        [ [ 0, 1 ] ],
        [ [ 3, 5 ] ],
        [ [ 5, 7 ] ]
      ]
    }
  ]
};
